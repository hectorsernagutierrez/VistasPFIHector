@using TorneopfihsOntology;
@using TorneoedicionpfihsOntology;
@using OrganizacionpfihsOntology;
@using GnossBase;
@model ResourceViewModel
@{
	ResourceModel FichaDocumento = Model.Resource;
	CommunityModel Comunidad = Html.GetComunidad();
	UserIdentityModel IdentidadActual = Html.GetIdentidadActual();
	Html.AddBodyClass(" SportsTournamentModel ");
	if (FichaDocumento.ItemLinkedFotoVersion != 0 && !string.IsNullOrEmpty(FichaDocumento.ItemLinked.ToString()) && FichaDocumento.ItemLinked != Guid.Empty)
	{
	string urlPersonalizacion = $"{Html.GetBaseUrlContent()}/{Es.Riam.Util.UtilArchivos.ContentOntologias}/Archivos/{FichaDocumento.ItemLinked.ToString().Substring(0, 3)}";
	Html.GetListaJS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.js?v= {FichaDocumento.ItemLinkedFotoVersion}");
	Html.GetListaCSS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.css?v= {FichaDocumento.ItemLinkedFotoVersion}");
	}
	SemanticResourceModel semCmsModel = Model.SemanticFrom;
	 GnossOCBase.LanguageEnum idiomaUsuario = (GnossOCBase.LanguageEnum)Enum.Parse(typeof(GnossOCBase.LanguageEnum), Html.GetUtilIdiomas().LanguageCode.ToLower());
	SportsTournament pSportsTournament = new SportsTournament(semCmsModel,idiomaUsuario);
}
<div class="row">
<div class="col01 col col-12 col-lg-9">
<div typeof="https://schema.org/extended/SportsTournament:sportstournament">
<div class="contentGroup contenidoPrincipal">
<div class="group title">
	<h2>@pSportsTournament.Schema_name</h2>
	<h3>@pSportsTournament.Schema_identifier</h3>
</div>
</div>
<div class="group content semanticView">
<div class="group group_info">
<div class="contentGroup">
@if(!string.IsNullOrEmpty(pSportsTournament.Schema_name))
{
<div>
		<strong>@pSportsTournament.GetLabel(nameof(pSportsTournament.Schema_name),idiomaUsuario)</strong>
<span class="values">
		<p property="@pSportsTournament.GetPropertyURI(nameof(pSportsTournament.Schema_name))"> @pSportsTournament.Schema_name[(int)idiomaUsuario] </p>
</span>
</div>
}
@if(!string.IsNullOrEmpty(pSportsTournament.Schema_identifier))
{
<div>
		<strong>@pSportsTournament.GetLabel(nameof(pSportsTournament.Schema_identifier),idiomaUsuario)</strong>
<span class="values">
		<p property="@pSportsTournament.GetPropertyURI(nameof(pSportsTournament.Schema_identifier))"> @pSportsTournament.Schema_identifier[(int)idiomaUsuario] </p>
</span>
</div>
}
@if(!string.IsNullOrEmpty(pSportsTournament.Schema_description))
{
<div>
		<strong>@pSportsTournament.GetLabel(nameof(pSportsTournament.Schema_description),idiomaUsuario)</strong>
<span class="values">
		<p property="@pSportsTournament.GetPropertyURI(nameof(pSportsTournament.Schema_description))"> @pSportsTournament.Schema_description[(int)idiomaUsuario] </p>
</span>
</div>
}
@if(pSportsTournament.Schema_organizer!=null)
{
<div>
	@foreach(Organization prop in pSportsTournament.Schema_organizer)
	{
		PintarOrganization(prop,idiomaUsuario);
	}
</div>
}
@if(pSportsTournament.Eschema_subEvent!=null)
{
<div>
	@foreach(SportsTournamentEdition prop in pSportsTournament.Eschema_subEvent)
	{
		PintarSportsTournamentEdition(prop,idiomaUsuario);
	}
</div>
}
</div>
</div>
</div>

</div>
</div>
</div>

@functions
{
}
@functions
{
void PintarOrganization(Organization pOrganization, GnossOCBase.LanguageEnum idiomaUsuario) {

if(pOrganization.Schema_name!=null)
{
<div>
		<strong>@pOrganization.GetLabel(nameof(pOrganization.Schema_name),idiomaUsuario)</strong>
<span>
<p property ="@pOrganization.GetPropertyURI(nameof(pOrganization.Schema_name))"> @pOrganization.Schema_name </p>
</span>
</div>
}
}
void PintarSportsTournamentEdition(SportsTournamentEdition pSportsTournamentEdition, GnossOCBase.LanguageEnum idiomaUsuario) {

if(pSportsTournamentEdition.Schema_name!=null)
{
<div>
		<strong>@pSportsTournamentEdition.GetLabel(nameof(pSportsTournamentEdition.Schema_name),idiomaUsuario)</strong>
<span>
<p property ="@pSportsTournamentEdition.GetPropertyURI(nameof(pSportsTournamentEdition.Schema_name))"> @pSportsTournamentEdition.Schema_name </p>
</span>
</div>
}
if(pSportsTournamentEdition.Eschema_season!=null)
{
}
}
}
}
