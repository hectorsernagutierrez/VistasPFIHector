@using TorneoedicionpfihsOntology;
@using TemporadapfihsOntology;
@using PartidopfihsOntology;
@using ClubpfihsOntology;
@using ClubpfihsOntology;
@using OrganizacionpfihsOntology;
@using GnossBase;
@model ResourceViewModel
@{
	ResourceModel FichaDocumento = Model.Resource;
	CommunityModel Comunidad = Html.GetComunidad();
	UserIdentityModel IdentidadActual = Html.GetIdentidadActual();
	Html.AddBodyClass(" SportsTournamentEditionModel ");
	if (FichaDocumento.ItemLinkedFotoVersion != 0 && !string.IsNullOrEmpty(FichaDocumento.ItemLinked.ToString()) && FichaDocumento.ItemLinked != Guid.Empty)
	{
	string urlPersonalizacion = $"{Html.GetBaseUrlContent()}/{Es.Riam.Util.UtilArchivos.ContentOntologias}/Archivos/{FichaDocumento.ItemLinked.ToString().Substring(0, 3)}";
	Html.GetListaJS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.js?v= {FichaDocumento.ItemLinkedFotoVersion}");
	Html.GetListaCSS().Add($"{urlPersonalizacion}/{FichaDocumento.ItemLinked.ToString()}.css?v= {FichaDocumento.ItemLinkedFotoVersion}");
	}
	SemanticResourceModel semCmsModel = Model.SemanticFrom;
	 GnossOCBase.LanguageEnum idiomaUsuario = (GnossOCBase.LanguageEnum)Enum.Parse(typeof(GnossOCBase.LanguageEnum), Html.GetUtilIdiomas().LanguageCode.ToLower());
	SportsTournamentEdition pSportsTournamentEdition = new SportsTournamentEdition(semCmsModel,idiomaUsuario);
}
<div class="row">
<div class="col01 col col-12 col-lg-9">
<div typeof="https://schema.org/extended/SportsTournamentEdition:sportstournamentedition">
<div class="contentGroup contenidoPrincipal">
<div class="group title">
	<h2>@pSportsTournamentEdition.Schema_name</h2>
	<h3>@pSportsTournamentEdition.Schema_identifier</h3>
</div>
</div>
<div class="group content semanticView">
<div class="group group_info">
<div class="contentGroup">
@if(!string.IsNullOrEmpty(pSportsTournamentEdition.Schema_name))
{
<div>
		<strong>@pSportsTournamentEdition.GetLabel(nameof(pSportsTournamentEdition.Schema_name),idiomaUsuario)</strong>
<span class="values">
		<p property="@pSportsTournamentEdition.GetPropertyURI(nameof(pSportsTournamentEdition.Schema_name))"> @pSportsTournamentEdition.Schema_name[(int)idiomaUsuario] </p>
</span>
</div>
}
@if(!string.IsNullOrEmpty(pSportsTournamentEdition.Schema_identifier))
{
<div>
		<strong>@pSportsTournamentEdition.GetLabel(nameof(pSportsTournamentEdition.Schema_identifier),idiomaUsuario)</strong>
<span class="values">
		<p property="@pSportsTournamentEdition.GetPropertyURI(nameof(pSportsTournamentEdition.Schema_identifier))"> @pSportsTournamentEdition.Schema_identifier[(int)idiomaUsuario] </p>
</span>
</div>
}
@if(!string.IsNullOrEmpty(pSportsTournamentEdition.Schema_alternativeName))
{
<div>
		<strong>@pSportsTournamentEdition.GetLabel(nameof(pSportsTournamentEdition.Schema_alternativeName),idiomaUsuario)</strong>
<span class="values">
		<p property="@pSportsTournamentEdition.GetPropertyURI(nameof(pSportsTournamentEdition.Schema_alternativeName))"> @pSportsTournamentEdition.Schema_alternativeName[(int)idiomaUsuario] </p>
</span>
</div>
}
@if(pSportsTournamentEdition.Eschema_season!=null)
{
<div>
	PintarThing(pSportsTournamentEdition.Eschema_season,idiomaUsuario);
</div>
}
@if(pSportsTournamentEdition.Eschema_subEvent!=null)
{
<div>
	@foreach(SportsEvent prop in pSportsTournamentEdition.Eschema_subEvent)
	{
		PintarSportsEvent(prop,idiomaUsuario);
	}
</div>
}
@if(pSportsTournamentEdition.Eschema_particpants!=null)
{
<div>
	@foreach(SportsClub prop in pSportsTournamentEdition.Eschema_particpants)
	{
		PintarSportsClub(prop,idiomaUsuario);
	}
</div>
}
@if(pSportsTournamentEdition.Eschema_winner!=null)
{
<div>
	PintarSportsClub(pSportsTournamentEdition.Eschema_winner,idiomaUsuario);
</div>
}
@if(pSportsTournamentEdition.Schema_organizer!=null)
{
<div>
	@foreach(Organization prop in pSportsTournamentEdition.Schema_organizer)
	{
		PintarOrganization(prop,idiomaUsuario);
	}
</div>
}
</div>
</div>
</div>

</div>
</div>
</div>

@functions
{
}
@functions
{
void PintarThing(Thing pThing, GnossOCBase.LanguageEnum idiomaUsuario) {

if(pThing.Schema_name!=null)
{
<div>
		<strong>@pThing.GetLabel(nameof(pThing.Schema_name),idiomaUsuario)</strong>
<span>
<p property ="@pThing.GetPropertyURI(nameof(pThing.Schema_name))"> @pThing.Schema_name </p>
</span>
</div>
}
}
void PintarSportsEvent(SportsEvent pSportsEvent, GnossOCBase.LanguageEnum idiomaUsuario) {

if(pSportsEvent.Eschema_namePartido!=null)
{
<div>
		<strong>@pSportsEvent.GetLabel(nameof(pSportsEvent.Eschema_namePartido),idiomaUsuario)</strong>
<span>
<p property ="@pSportsEvent.GetPropertyURI(nameof(pSportsEvent.Eschema_namePartido))"> @pSportsEvent.Eschema_namePartido </p>
</span>
</div>
}
}
void PintarSportsClub(SportsClub pSportsClub, GnossOCBase.LanguageEnum idiomaUsuario) {

if(pSportsClub.Schema_name!=null)
{
<div>
		<strong>@pSportsClub.GetLabel(nameof(pSportsClub.Schema_name),idiomaUsuario)</strong>
<span>
<p property ="@pSportsClub.GetPropertyURI(nameof(pSportsClub.Schema_name))"> @pSportsClub.Schema_name </p>
</span>
</div>
}
}
void PintarOrganization(Organization pOrganization, GnossOCBase.LanguageEnum idiomaUsuario) {

if(pOrganization.Schema_name!=null)
{
<div>
		<strong>@pOrganization.GetLabel(nameof(pOrganization.Schema_name),idiomaUsuario)</strong>
<span>
<p property ="@pOrganization.GetPropertyURI(nameof(pOrganization.Schema_name))"> @pOrganization.Schema_name </p>
</span>
</div>
}
}
}
}
